version: '3'
services:
  reverse-proxy:
    build:
      context: ${DOCKER_BUILD_DIR}/reverse-proxy
      args:
        ENV: ${ENV}
    container_name: reverse_proxy
    depends_on:
      - nodejs
      - nginx
      - html2pdf
    ports:
      - ${REVERSE_PROXY_PORT}:80
    networks:
      app_net:
        ipv4_address: 172.28.1.10
  html2pdf:
    build:
      context: ${DOCKER_BUILD_DIR}/html2pdf
      args:
        UID: ${DOCKER_UID}
        GID: ${DOCKER_GID}
    container_name: html2pdf
    volumes:
      - ${HTML2PDF_APP_PATH}:/srv/app
    expose:
      - ${NODE_PORT}
    command: ${NODE_COMMAND}
    tty: true
    extra_hosts:
      - ${API_HOST}:172.28.1.10
    networks:
      app_net:
        ipv4_address: 172.28.1.25
    env_file:
      - .env
  nodejs:
    build:
      context: ${DOCKER_BUILD_DIR}/nodejs
      args:
        UID: ${DOCKER_UID}
        GID: ${DOCKER_GID}
    container_name: nodejs
    volumes:
      - ${API_APP_PATH}:/srv/app
    depends_on:
    - db
    expose:
    - ${NODE_PORT}
    command: ${NODE_COMMAND}
    #tty: true
    env_file:
      - .env
    networks:
      app_net:
        ipv4_address: 172.28.1.30
    extra_hosts:
      - ${API_HOST}:172.28.1.10
  db:
    image: postgres:11.5-alpine
    container_name: db
    restart: always
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
      - ${POSTGRES_LOG_DIR}:/logs
    ports:
      - ${POSTGRES_DEBUG_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_INITDB_ARGS="--encoding=UTF8"
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      app_net:
        ipv4_address: 172.28.1.20
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      restart: always
      depends_on:
        - db
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@dev
        PGADMIN_DEFAULT_PASSWORD: admin
      volumes:
        - ${DATA_ROOT}/pgadmin:/var/lib/pgadmin
      ports:
        - 5050:80
      networks:
        app_net:
          ipv4_address: 172.28.1.21
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      app_net:
        ipv4_address: 172.28.1.22
  php:
    build:
      context: ${DOCKER_BUILD_DIR}/php
      args:
        UID: ${DOCKER_UID}
        GID: ${DOCKER_GID}
    container_name: php
    volumes:
      - ${PHP_APPS_PATH}:/var/www
    networks:
      app_net:
        ipv4_address: 172.28.1.14
    extra_hosts:
      - ${API_HOST}:172.28.1.10
    env_file:
      - .env
  nginx:
    build:
      context: ${DOCKER_BUILD_DIR}/nginx
    restart: always
    container_name: nginx
    expose:
      - ${NGINX_PORT}
    depends_on:
      - php
    volumes:
      - ${PHP_APPS_PATH}:/var/www
      - ${NGINX_LOG_DIR}:/var/log/nginx
    networks:
      app_net:
        ipv4_address: 172.28.1.15

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
